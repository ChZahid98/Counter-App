{"ast":null,"code":"var _jsxFileName = \"/home/purelogics/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      count: 0\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"//\", /*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? 'Zero' : count;\n  }\n\n}\n\nconsole.log(his.formatCount());\nexport default Counter;","map":{"version":3,"sources":["/home/purelogics/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","state","count","render","formatCount","console","log","his"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAAA;AAAA;AAAA,SAC5BE,KAD4B,GACpB;AACJC,MAAAA,KAAK,EAAC;AADF,KADoB;AAAA;;AAI5BC,EAAAA,MAAM,GAAG;AAEL,wBACA;AAAA,oCACM;AAAA,kBAAO,KAAKC,WAAL;AAAP;AAAA;AAAA;AAAA;AAAA,cADN,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAMH;;AAGDA,EAAAA,WAAW,GAAG;AACV,UAAM;AAACF,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,WAAOC,KAAK,KAAI,CAAT,GAAa,MAAb,GAAsBA,KAA7B;AACH;;AAlB2B;;AAqB/BG,OAAO,CAACC,GAAR,CAAYC,GAAG,CAACH,WAAJ,EAAZ;AACD,eAAeJ,OAAf","sourcesContent":["import React, { Component } from 'react';\nclass Counter extends Component {\n    state = {\n        count:0\n    };\n    render() { \n       \n        return (\n        <div>\n            //<span>{this.formatCount()}</span>\n            <button>Increment</button>\n            </div>\n                );\n    }\n\n\n    formatCount (){\n        const {count} = this.state;\n        return count ===0 ? 'Zero' : count;\n    }\n\n}\n console.log(his.formatCount());\nexport default Counter;"]},"metadata":{},"sourceType":"module"}