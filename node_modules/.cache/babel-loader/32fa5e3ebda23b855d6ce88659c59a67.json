{"ast":null,"code":"var _jsxFileName = \"/home/purelogics/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  render() {\n    state = {\n      count: 1\n    };\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this);\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return this.state.count === 0 ? 'Zero' : this.state.count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/home/purelogics/counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","render","state","count","formatCount"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AACA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC5BE,EAAAA,MAAM,GAAG;AACLC,IAAAA,KAAK,GAAG;AACJC,MAAAA,KAAK,EAAC;AADF,KAAR;AAGA,wBACA;AAAA,8BACI;AAAA,kBAAO,KAAKC,WAAL;AAAP;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADA;AAMH;;AAGDA,EAAAA,WAAW,GAAG;AACV,UAAM;AAACD,MAAAA;AAAD,QAAU,KAAKD,KAArB;AACA,WAAO,KAAKA,KAAL,CAAWC,KAAX,KAAoB,CAApB,GAAuB,MAAvB,GAA+B,KAAKD,KAAL,CAAWC,KAAjD;AACH;;AAjB2B;;AAqBhC,eAAeH,OAAf","sourcesContent":["import React, { Component } from 'react';\nclass Counter extends Component {\n    render() { \n        state = {\n            count:1\n        };\n        return (\n        <div>\n            <span>{this.formatCount()}</span>\n            <button>Increment</button>\n            </div>\n                );\n    }\n\n\n    formatCount (){\n        const {count} = this.state;\n        return this.state.count ===0 ?'Zero' :this.state.count;\n    }\n\n}\n \nexport default Counter;"]},"metadata":{},"sourceType":"module"}